name: Python CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the code from the repository

      - name: Set up Python
        uses: actions/setup-python@v4  # Set up the Python environment
        with:
          python-version: '3.9'  # Specify the Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3  # Save the dependencies as artifacts
        with:
          name: dependencies
          path: ./venv

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the code from the repository

      - name: Set up Python
        uses: actions/setup-python@v4  # Set up the Python environment
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Tests
        run: python -m unittest discover  # Run unit tests with unittest

      - name: Code Quality Analysis
        run: |
          flake8 .  # Run flake8 for code quality checks
          pytest --cov  # Run pytest for code coverage

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the code from the repository

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          # Replace this with your actual deployment commands, e.g., uploading to a server

  notify:
    runs-on: ubuntu-latest
    if: failure()  # Trigger this job only if the build or deploy fails

    steps:
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
